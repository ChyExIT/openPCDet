
# '
# # 本配置文件定义了BevFusion模型的完整架构，包括激光雷达+图像双分支、BEV融合模块、检测头等

# 1. 网络名称
# BevFusion（基于BEV的多模态融合网络）

# 2. 网络应用场景
# 用于自动驾驶3D目标检测，支持同时处理：
#   激光雷达点云数据（通过VoxelResBackBone8x处理）
#   相机图像数据（通过SwinTransformer+DepthLSSTransform生成BEV特征）


# 3. 关键模块调用
# 模块名	                    功能说明	                                对应代码文件
# ConvFuser	    多模态特征融合（激光雷达BEV+图像BEV）	        pcdet/models/fuser/convfuser.py
# DepthLSSTransform	      将图像特征转换为BEV表示	              未展示但属于视角转换核心组件
# TransFusionHead	        基于Transformer的检测头	                检测头实现模块


# 4. 网络结构图
# graph TD
#     A[LiDAR点云] --> B[体素化处理]
#     B --> C[3D Backbone]
#     C --> D[BEV投影]
    
#     E[相机图像] --> F[SwinTransformer]
#     F --> G[视角变换到BEV]
    
#     D --> H[ConvFuser融合]
#     G --> H
#     H --> I[2D Backbone]
#     I --> J[TransFusion检测头]



# 特性	                      BevFusion	                        传统单模态方法
# 输入模态	                LiDAR + Camera	                    仅LiDAR或仅Camera
# BEV生成方式	       LiDAR自然BEV + 图像通过DepthLSSTransform转换	    单一模态BEV
# 特征融合阶段	          BEV级融合（中期融合）	                      无融合或后期融合
# 典型参数量	                  ~80M	                            ~30M（仅LiDAR）
# mAP@NuScenes	            约68.2%	                          约63.5%（PointPillars）

# 该配置方案在NuScenes榜单上曾取得SOTA效果，融合模块的推理速度约为45FPS（在RTX 3090上测试）。

# '



# NuScenes数据集的10类检测目标（车辆、行人等）
CLASS_NAMES: ['car','truck', 'construction_vehicle', 'bus', 'trailer',
              'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']

# 多模态数据预处理配置（点云范围、图像尺寸、数据增强策略、体素化参数等）
DATA_CONFIG:
    _BASE_CONFIG_: cfgs/dataset_configs/nuscenes_dataset.yaml  # 继承基础配置
    POINT_CLOUD_RANGE: [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]  # 点云处理范围(xmin, ymin, zmin, xmax, ymax, zmax)
    CAMERA_CONFIG:
        USE_CAMERA: True  # 启用相机数据
        IMAGE:
            FINAL_DIM: [256,704]   # 输入图像尺寸(高256，宽704)
            RESIZE_LIM_TRAIN: [0.38, 0.55]  # 训练时随机缩放比例范围
            RESIZE_LIM_TEST: [0.48, 0.48]

    DATA_AUGMENTOR:
        DISABLE_AUG_LIST: ['placeholder']
        AUG_CONFIG_LIST:
            - NAME: random_world_flip   # 全局坐标翻转增强
              ALONG_AXIS_LIST: ['x', 'y']    # 允许沿x/y轴翻转

            - NAME: random_world_rotation  # 全局旋转
              WORLD_ROT_ANGLE: [-0.78539816, 0.78539816]   # 旋转角度范围(弧度制)

            - NAME: random_world_scaling
              WORLD_SCALE_RANGE: [0.9, 1.1]

            - NAME: random_world_translation
              NOISE_TRANSLATE_STD: [0.5, 0.5, 0.5]
            
            - NAME: imgaug  # 图像专用增强
              ROT_LIM: [-5.4, 5.4]    # 图像旋转角度范围(约±30°)
              RAND_FLIP: True

    DATA_PROCESSOR:
        - NAME: mask_points_and_boxes_outside_range
          REMOVE_OUTSIDE_BOXES: True

        - NAME: shuffle_points
          SHUFFLE_ENABLED: {
            'train': True,
            'test': True
          }

        - NAME: transform_points_to_voxels    # 点云体素化
          VOXEL_SIZE: [0.075, 0.075, 0.2]   # 体素尺寸(x,y,z方向)
          MAX_POINTS_PER_VOXEL: 10   # 单个体素最大点数
          MAX_NUMBER_OF_VOXELS: {
            'train': 120000,  # 最大体素数量(防止内存溢出)
            'test': 160000
          }

        - NAME: image_calibrate
        
        - NAME: image_normalize   # 图像归一化
          mean: [0.485, 0.456, 0.406]  # ImageNet均值
          std: [0.229, 0.224, 0.225]   # ImageNet标准差


# 模型完整架构定义（包含激光雷达+图像双分支、BEV融合模块、检测头等）
MODEL:
    NAME: BevFusion

    # 1. 激光雷达处理分支
    VFE:
        NAME: MeanVFE   # 体素特征编码（取体素内点云均值）

    BACKBONE_3D:
        NAME: VoxelResBackBone8x    # 3D体素残差网络（下采样8倍）
        USE_BIAS: False

    MAP_TO_BEV:
        NAME: HeightCompression  # 高度维度压缩（3D->2D BEV）
        NUM_BEV_FEATURES: 256   # BEV特征通道数
    
    # 2. 图像处理分支
    IMAGE_BACKBONE:
        NAME: SwinTransformer    # 图像特征提取主干
        EMBED_DIMS: 96    # 初始嵌入维度
        DEPTHS: [2, 2, 6, 2]    # 各阶段transformer层数
        NUM_HEADS: [3, 6, 12, 24]
        WINDOW_SIZE: 7
        MLP_RATIO: 4
        DROP_RATE: 0.
        ATTN_DROP_RATE: 0.
        DROP_PATH_RATE: 0.2
        PATCH_NORM: True
        OUT_INDICES: [1, 2, 3]
        WITH_CP: False
        CONVERT_WEIGHTS: True
        INIT_CFG:
            type: Pretrained
            checkpoint: swint-nuimages-pretrained.pth
    
    NECK:
        NAME: GeneralizedLSSFPN  # 特征金字塔网络
        IN_CHANNELS: [192, 384, 768]  # 输入特征通道数（对应Swin的stage1-3）
        OUT_CHANNELS: 256
        START_LEVEL: 0
        END_LEVEL: -1
        NUM_OUTS: 3
    
    VTRANSFORM:
        NAME: DepthLSSTransform  # 视角转换模块
        IMAGE_SIZE: [256, 704]
        IN_CHANNEL: 256
        OUT_CHANNEL: 80
        FEATURE_SIZE: [32, 88]
        XBOUND: [-54.0, 54.0, 0.3] # BEV网格x轴划分（起点，终点，步长）
        YBOUND: [-54.0, 54.0, 0.3]
        ZBOUND: [-10.0, 10.0, 20.0]
        DBOUND: [1.0, 60.0, 0.5]    # 深度估计范围
        DOWNSAMPLE: 2
    
    # 3. 多模态融合
    FUSER:
        NAME: ConvFuser
        IN_CHANNEL: 336  # 输入通道(LiDAR 256 + 图像80)
        OUT_CHANNEL: 256  # 融合后特征维度
    
    # 4. BEV处理与检测头
    BACKBONE_2D:
        NAME: BaseBEVBackbone  # 2D卷积网络
        LAYER_NUMS: [5, 5]   # 每阶段卷积层数
        LAYER_STRIDES: [1, 2]
        NUM_FILTERS: [128, 256]
        UPSAMPLE_STRIDES: [1, 2]
        NUM_UPSAMPLE_FILTERS: [256, 256]
        USE_CONV_FOR_NO_STRIDE: True


    DENSE_HEAD:
        CLASS_AGNOSTIC: False
        NAME: TransFusionHead   # Transformer检测头

        USE_BIAS_BEFORE_NORM: False

        NUM_PROPOSALS: 200
        HIDDEN_CHANNEL: 128
        NUM_CLASSES: 10
        NUM_HEADS: 8
        NMS_KERNEL_SIZE: 3
        FFN_CHANNEL: 256
        DROPOUT: 0.1
        BN_MOMENTUM: 0.1
        ACTIVATION: relu

        NUM_HM_CONV: 2
        SEPARATE_HEAD_CFG:    # 多任务头配置
            HEAD_ORDER: ['center', 'height', 'dim', 'rot', 'vel']  # 预测目标属性
            HEAD_DICT: {
                'center': {'out_channels': 2, 'num_conv': 2},
                'height': {'out_channels': 1, 'num_conv': 2},
                'dim': {'out_channels': 3, 'num_conv': 2},
                'rot': {'out_channels': 2, 'num_conv': 2},
                'vel': {'out_channels': 2, 'num_conv': 2},
            }
      
        TARGET_ASSIGNER_CONFIG:
            FEATURE_MAP_STRIDE: 8
            DATASET: nuScenes
            GAUSSIAN_OVERLAP: 0.1
            MIN_RADIUS: 2
            HUNGARIAN_ASSIGNER:   
                cls_cost: {'gamma': 2.0, 'alpha': 0.25, 'weight': 0.15}
                reg_cost: {'weight': 0.25}
                iou_cost: {'weight': 0.25}
        
        LOSS_CONFIG:
            LOSS_WEIGHTS: { # 损失权重配置
                    'cls_weight': 1.0,   # 分类损失权重
                    'bbox_weight': 0.25,
                    'hm_weight': 1.0,
                    'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2]  # 各回归项权重
                }
            LOSS_CLS:
                use_sigmoid: True
                gamma: 2.0
                alpha: 0.25
          
        POST_PROCESSING:
            SCORE_THRESH: 0.0
            POST_CENTER_RANGE: [-61.2, -61.2, -10.0, 61.2, 61.2, 10.0]

    POST_PROCESSING:
        RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
        SCORE_THRESH: 0.1
        OUTPUT_RAW_SCORE: False

        EVAL_METRIC: kitti


# 训练超参数配置（优化器、学习率策略、batch size等）
OPTIMIZATION:
    BATCH_SIZE_PER_GPU: 3
    NUM_EPOCHS: 6

    OPTIMIZER: adam_cosineanneal  # 优化器类型
    LR: 0.0001  # 初始学习率
    WEIGHT_DECAY: 0.01  # L2正则化系数
    MOMENTUM: 0.9
    BETAS: [0.9, 0.999]

    MOMS: [0.9, 0.8052631]
    PCT_START: 0.4
    WARMUP_ITER: 500

    DECAY_STEP_LIST: [35, 45]
    LR_WARMUP: False  # 学习率预热开关
    WARMUP_EPOCH: 1  # 预热周期数

    GRAD_NORM_CLIP: 35   # 梯度裁剪阈值

    LOSS_SCALE_FP16: 32



# graph LR
#     A[DATA_CONFIG] --> B[数据加载]
#     B --> C[LiDAR处理管线]
#     B --> D[Camera处理管线]
#     C --> E[MODEL.lidar_branch]
#     D --> F[MODEL.camera_branch]
#     E --> G[FUSER]
#     F --> G
#     G --> H[检测头]
#     I[OPTIMIZATION] --> J[训练过程控制]


# 该配置文件完整定义了BevFusion多模态检测系统的实现方案，各模块协同工作流程如下：

  # 数据预处理：双模态数据分别进行体素化/图像归一化
  # 特征提取：点云→3D卷积网络，图像→SwinTransformer
  # 视角对齐：图像特征通过DepthLSSTransform转换到BEV空间
  # 特征融合：ConvFuser实现跨模态特征交互
  # 检测预测：TransFusionHead输出3D检测结果